# Generated by Django 4.0 on 2022-03-24 18:45

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import main.models.main


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('city_id', models.BigIntegerField(db_index=True, primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=255)),
                ('native_city', models.CharField(default=None, max_length=255, null=True)),
                ('native_country', models.CharField(default=None, max_length=255, null=True)),
                ('auto_checked', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'main_address',
            },
        ),
        migrations.CreateModel(
            name='Blogger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(db_index=True, default=None, max_length=255, null=True)),
                ('social_id', models.CharField(db_index=True, default='', max_length=255)),
                ('name', models.CharField(blank=True, db_index=True, default=None, max_length=255, null=True)),
                ('social_network_type_id', models.BigIntegerField(blank=True, db_index=True, default=3, null=True)),
                ('post_default_count', models.IntegerField(blank=True, default=None, null=True)),
                ('default_total', models.BigIntegerField(db_index=True, default=0)),
                ('following', models.BigIntegerField(blank=True, db_index=True, default=None, null=True)),
                ('avatar', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('bio', models.TextField(blank=True, default=None, null=True)),
                ('external_link', models.TextField(blank=True, default=None, null=True)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=main.models.main.default_categories, null=True, size=None)),
                ('account_creation_date', models.DateField(blank=True, default=None, null=True)),
                ('is_business_account', models.BooleanField(default=False)),
                ('age', models.IntegerField(blank=True, default=None, null=True)),
                ('engagement_rate', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True)),
                ('parsing_status', models.BooleanField(default=False)),
                ('parsing_measurement', models.PositiveSmallIntegerField(default=0)),
                ('parsing_updated_at', models.DateTimeField(auto_now_add=True)),
                ('file_from_info', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default=None, max_length=200, null=True), default=list, size=None)),
                ('link_from', models.CharField(default=None, max_length=255, null=True)),
                ('another_socials', models.JSONField(default=dict)),
                ('is_advertiser', models.BooleanField(default=False)),
                ('email', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('is_photo_analyzed', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('address', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.address')),
            ],
            options={
                'db_table': 'hype__blogger',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_name', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(default=None, max_length=100, null=True)),
                ('native_name', models.CharField(default=None, max_length=100, null=True)),
            ],
            options={
                'db_table': 'hype_category',
            },
        ),
        migrations.CreateModel(
            name='Emotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'hype_emotion',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'hype_gender',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(default=None, max_length=50, null=True)),
                ('native_name', models.CharField(default=None, max_length=50, null=True)),
            ],
            options={
                'db_table': 'hype_language',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_name', models.CharField(max_length=255)),
                ('native_name', models.CharField(default=None, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
                'db_table': 'main_status',
            },
        ),
        migrations.CreateModel(
            name='VerificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'main_verification_type',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(max_length=255, unique=True)),
                ('post_login', models.CharField(max_length=255)),
                ('photos_url', models.TextField()),
                ('text', models.TextField()),
                ('likes_count', models.IntegerField()),
                ('comments_count', models.IntegerField()),
                ('views_count', models.IntegerField(default=0)),
                ('date', models.DateTimeField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('proceed_face_data', models.BooleanField(default=False)),
                ('face_data', models.JSONField(default=None, null=True)),
                ('blogger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='main.blogger')),
            ],
            options={
                'db_table': 'hype__post',
            },
        ),
        migrations.AddField(
            model_name='blogger',
            name='category',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.category'),
        ),
        migrations.AddField(
            model_name='blogger',
            name='gender',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.gender'),
        ),
        migrations.AddField(
            model_name='blogger',
            name='language',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.language'),
        ),
        migrations.AddField(
            model_name='blogger',
            name='status',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.status'),
        ),
        migrations.AddField(
            model_name='blogger',
            name='verification_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.verificationtype'),
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=255)),
                ('social_id', models.CharField(db_index=True, max_length=255)),
                ('name', models.CharField(blank=True, db_index=True, default=None, max_length=255, null=True)),
                ('social_network_type_id', models.BigIntegerField(blank=True, db_index=True, default=3, null=True)),
                ('bloggers', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), default=list, size=None)),
                ('followers', models.BigIntegerField(blank=True, default=None, null=True)),
                ('following', models.BigIntegerField(blank=True, default=None, null=True)),
                ('contents', models.BigIntegerField(blank=True, default=None, null=True)),
                ('avatar', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('bio', models.TextField(blank=True, default=None, null=True)),
                ('external_link', models.TextField(blank=True, default=None, null=True)),
                ('is_business_account', models.BooleanField(blank=True, default=None, null=True)),
                ('age', models.IntegerField(blank=True, db_index=True, default=None, null=True)),
                ('email', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('is_photo_analyzed', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('address', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.address')),
                ('category', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.category')),
                ('gender', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.gender')),
                ('language', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.language')),
                ('status', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.status')),
                ('verification_type', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.verificationtype')),
            ],
            options={
                'db_table': 'hype__subscriber',
                'unique_together': {('social_id', 'social_network_type_id')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_id', models.CharField(max_length=255)),
                ('login', models.CharField(max_length=255)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='likes', to='main.post')),
            ],
            options={
                'db_table': 'hype__like',
                'unique_together': {('post_id', 'social_id')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('comment_id', models.CharField(max_length=50)),
                ('commentator_social_id', models.CharField(max_length=255)),
                ('commentator_login', models.CharField(max_length=255)),
                ('emoji', models.JSONField(default=None, null=True)),
                ('is_contain_profanity', models.BooleanField(default=None, null=True)),
                ('is_done', models.BooleanField(default=False)),
                ('emotion_text_type', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.emotion')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to='main.post')),
            ],
            options={
                'db_table': 'hype__comment',
                'unique_together': {('post_id', 'comment_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='blogger',
            unique_together={('social_id', 'social_network_type_id')},
        ),
    ]
