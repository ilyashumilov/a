# Generated by Django 3.2.9 on 2022-04-14 21:34

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('native_name', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'extra_city',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('native_name', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'extra_country',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'extra_gender',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'extra_language',
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('photo', models.CharField(default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'extra_social_network_type',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
                'db_table': 'extra_status',
            },
        ),
        migrations.CreateModel(
            name='VerificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'extra_verification_type',
            },
        ),
        migrations.CreateModel(
            name='ProceedBlogger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('login', models.CharField(blank=True, db_index=True, max_length=255)),
                ('social_id', models.CharField(blank=True, db_index=True, default=None, max_length=255, null=True)),
                ('subscribers_count', models.BigIntegerField(blank=True, db_index=True, default=None, null=True)),
                ('contents_count', models.BigIntegerField(blank=True, db_index=True, default=None, null=True)),
                ('following', models.BigIntegerField(blank=True, db_index=True, default=None, null=True)),
                ('default_total', models.BigIntegerField(blank=True, default=None, null=True)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, db_index=True, default=None, null=True, size=None)),
                ('bio', models.TextField(blank=True, default=None, null=True)),
                ('external_link', models.TextField(default=None, null=True)),
                ('account_creation_date', models.DateField(blank=True, default=None, null=True)),
                ('age', models.IntegerField(blank=True, db_index=True, default=None, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('avatar', models.CharField(default=None, max_length=255, null=True)),
                ('engagement_rate', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=5, null=True)),
                ('name', models.CharField(default=None, max_length=255, null=True)),
                ('file_from_info', models.CharField(default=None, max_length=55, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.country')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.gender')),
                ('social_network_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.socialnetwork')),
                ('status', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.status')),
                ('verification_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.verificationtype')),
            ],
            options={
                'db_table': 'proceed_blogger',
                'unique_together': {('login', 'social_network_type_id')},
            },
        ),
    ]
